name: Most Active Stock Calls/Puts Collector

on:
  # Run every 15 minutes from 9:30 AM to 3:00 PM IST (Monday to Friday)
  # Converted to UTC: 4:00 AM to 9:30 AM UTC
  schedule:
    # 9:30 AM IST = 4:00 AM UTC
    - cron: '0 4 * * 1-5'     # 9:30 AM IST
    - cron: '15 4 * * 1-5'    # 9:45 AM IST
    - cron: '30 4 * * 1-5'    # 10:00 AM IST
    - cron: '45 4 * * 1-5'    # 10:15 AM IST
    - cron: '0 5 * * 1-5'     # 10:30 AM IST
    - cron: '15 5 * * 1-5'    # 10:45 AM IST
    - cron: '30 5 * * 1-5'    # 11:00 AM IST
    - cron: '45 5 * * 1-5'    # 11:15 AM IST
    - cron: '0 6 * * 1-5'     # 11:30 AM IST
    - cron: '15 6 * * 1-5'    # 11:45 AM IST
    - cron: '30 6 * * 1-5'    # 12:00 PM IST
    - cron: '45 6 * * 1-5'    # 12:15 PM IST
    - cron: '0 7 * * 1-5'     # 12:30 PM IST
    - cron: '15 7 * * 1-5'    # 12:45 PM IST
    - cron: '30 7 * * 1-5'    # 1:00 PM IST
    - cron: '45 7 * * 1-5'    # 1:15 PM IST
    - cron: '0 8 * * 1-5'     # 1:30 PM IST
    - cron: '15 8 * * 1-5'    # 1:45 PM IST
    - cron: '30 8 * * 1-5'    # 2:00 PM IST
    - cron: '45 8 * * 1-5'    # 2:15 PM IST
    - cron: '0 9 * * 1-5'     # 2:30 PM IST
    - cron: '15 9 * * 1-5'    # 2:45 PM IST
    - cron: '30 9 * * 1-5'    # 3:00 PM IST

  # Manual trigger for testing
  workflow_dispatch:
    inputs:
      force_run:
        description: 'Force run even outside market hours'
        required: false
        default: 'false'
        type: boolean

jobs:
  most_active_stock_calls_puts:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Check Market Hours
      id: market-check
      run: |
        # Get current time in IST
        CURRENT_TIME=$(TZ='Asia/Kolkata' date +'%H%M')
        DAY_OF_WEEK=$(TZ='Asia/Kolkata' date +'%u')
        
        echo "Current IST time: $(TZ='Asia/Kolkata' date)"
        echo "Time: $CURRENT_TIME, Day: $DAY_OF_WEEK"
        
        # Market hours: 9:30 AM (0930) to 3:00 PM (1500) IST, Monday to Friday (1-5)
        if [[ $DAY_OF_WEEK -ge 1 && $DAY_OF_WEEK -le 5 && $CURRENT_TIME -ge 930 && $CURRENT_TIME -le 1500 ]]; then
          echo "is_market_hours=true" >> $GITHUB_OUTPUT
        else
          echo "is_market_hours=false" >> $GITHUB_OUTPUT
        fi

    - name: Collect NSE Data (Python)
      if: steps.market-check.outputs.is_market_hours == 'true' || github.event.inputs.force_run == 'true'
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        FORCE_RUN: ${{ github.event.inputs.force_run }}
      run: |
        echo "üîÑ Starting NSE data collection (Python)..."
        echo "Market Hours: ${{ steps.market-check.outputs.is_market_hours }}"
        echo "Force Run: ${{ github.event.inputs.force_run }}"
        python scripts/nse_data_collector.py

    - name: Skip Non-Market Hours
      if: steps.market-check.outputs.is_market_hours == 'false' && github.event.inputs.force_run != 'true'
      run: |
        echo "‚è∞ Outside market hours or weekend - skipping data collection"
        echo "Current time: $(TZ='Asia/Kolkata' date)"
        echo "Market hours: 9:30 AM - 3:00 PM IST, Monday to Friday"

    - name: Cleanup
      if: always()
      run: |
        echo "üßπ Data collection workflow completed"

  # Job to monitor and report status
  monitor-status:
    needs: most_active_stock_calls_puts
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Report Status
      run: |
        echo "üìä Most Active Stock Calls/Puts Collection Status: ${{ needs.most_active_stock_calls_puts.result }}"
        echo "Timestamp: $(TZ='Asia/Kolkata' date)"
        
        if [[ "${{ needs.most_active_stock_calls_puts.result }}" == "success" ]]; then
          echo "‚úÖ Data collection completed successfully"
        elif [[ "${{ needs.most_active_stock_calls_puts.result }}" == "skipped" ]]; then
          echo "‚è≠Ô∏è Data collection skipped (outside market hours)"
        else
          echo "‚ùå Data collection failed"
        fi 